knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(nycflights13)
flights <- flights
airlines <- airlines
flights[flights$month %in% c(11, 12)]
flights[flights$month %in% c(11, 12),]
?filtedr
?filter
flights %>% dplyr::filter(month == 1)
#install.packages(tidyverse)
#install.packages(nycflights13)
library(tidyverse) # This will include the "dplyr" package
library(nycflights13)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
#install.packages(tidyverse)
#install.packages(nycflights13)
library(tidyverse) # This will include the "dplyr" package
library(nycflights13)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
#install.packages(tidyverse)
#install.packages(nycflights13)
library(tidyverse) # This will include the "dplyr" package
library(nycflights13)
flights <- flights
airlines <- airlines
flights %>%
dplyr::filter(month == 1 | month == 2, day == 1)
flightsFiltered <- flights %>%
dplyr::filter(month %in% c(11, 12)) %>%
dplyr::filter(dep_time >= 700) %>%
dplyr::filter(carrier != "UA")
flightsFiltered
flightsArranged <- flightsFiltered %>%
arrange(year, month, day, desc(dep_delay))
flightsArranged
flightsSelected <- flightsArranged %>%
dplyr::select(-(hour:time_hour)) %>%
dplyr::select(flight, year, month, day, dep_time, dep_delay, arr_time, arr_delay, carrier, origin, dest, air_time, distance) %>%
dplyr::rename("airtime" = "air_time", "destination" = "dest")
flightsSelected
flightsMutated <- flightsSelected %>%
mutate(gain = dep_delay - arr_delay,
hours = airtime / 60,
gain_per_hour = gain/hours)
flightsMutated
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
#install.packages(tidyverse)
#install.packages(nycflights13)
library(tidyverse) # This will include the "dplyr" package
library(nycflights13)
flights <- flights
airlines <- airlines
flights %>%
dplyr::filter(month == 1 | month == 2, day == 1)
flightsFiltered <- flights %>%
dplyr::filter(month %in% c(11, 12)) %>%
dplyr::filter(dep_time >= 700) %>%
dplyr::filter(carrier != "UA")
flightsFiltered
flightsArranged <- flightsFiltered %>%
arrange(year, month, day, desc(dep_delay))
flightsArranged
flightsSelected <- flightsArranged %>%
dplyr::select(-(hour:time_hour)) %>%
dplyr::select(flight, year, month, day, dep_time, dep_delay, arr_time, arr_delay, carrier, origin, dest, air_time, distance) %>%
dplyr::rename("airtime" = "air_time", "destination" = "dest")
flightsSelected
flightsMutated <- flightsSelected %>%
mutate(gain = dep_delay - arr_delay,
hours = airtime / 60,
gain_per_hour = gain/hours)
flightsMutated
flightsMutated <- flightsSelected %>%
mutate(gain = dep_delay - arr_delay,
hours = airtime / 60,
gain_per_hour = gain/hours)
flightsMutated
?mutate_at
?across
?filter
flights2a <- flightsMutated %>%
mutate_at(.vars = c("year", "month", "day"), .funs = as.character)
flights2b <- flightsMutated %>%
mutate(across(.cols = c("year", "month", "day"), .fns = as.character))
flights3a <- flightsMutated %>%
mutate_all(.funs = as.character)
flights3b <- flightsMutated %>%
mutate(across(.cols = everything(), .fns = as.character))
# Check that these return the same result
identical(flights2a, flights2b)
identical(flights3a, flights3b)
meanDelays <- flightsMutated %>%
group_by(carrier) %>%
dplyr::summarize(meanDelay = mean(dep_delay, na.rm = TRUE)) %>%
arrange(desc(meanDelay))
meanDelays
meanDelays <- flightsMutated %>%
group_by(carrier) %>%
dplyr::summarize(meanDelay = mean(dep_delay, na.rm = TRUE)) %>%
arrange(desc(meanDelay))
meanDelays
carrierCounts <- flightsMutated %>%
group_by(carrier) %>%
dplyr::summarize(n = n()) %>%   # Equivalent: tally()
arrange(desc(n))
carrierCounts
airlineNames <- meanDelays %>%
left_join(airlines, by = c("carrier" = "carrier")) %>%
dplyr::select(name, carrier, meanDelay)
airlineNames
