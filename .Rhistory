knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(nycflights13)
flights <- flights
airlines <- airlines
flights[flights$month %in% c(11, 12)]
flights[flights$month %in% c(11, 12),]
?filtedr
?filter
flights %>% dplyr::filter(month == 1)
#install.packages(tidyverse)
#install.packages(nycflights13)
library(tidyverse) # This will include the "dplyr" package
library(nycflights13)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
#install.packages(tidyverse)
#install.packages(nycflights13)
library(tidyverse) # This will include the "dplyr" package
library(nycflights13)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
#install.packages(tidyverse)
#install.packages(nycflights13)
library(tidyverse) # This will include the "dplyr" package
library(nycflights13)
flights <- flights
airlines <- airlines
flights %>%
dplyr::filter(month == 1 | month == 2, day == 1)
flightsFiltered <- flights %>%
dplyr::filter(month %in% c(11, 12)) %>%
dplyr::filter(dep_time >= 700) %>%
dplyr::filter(carrier != "UA")
flightsFiltered
flightsArranged <- flightsFiltered %>%
arrange(year, month, day, desc(dep_delay))
flightsArranged
flightsSelected <- flightsArranged %>%
dplyr::select(-(hour:time_hour)) %>%
dplyr::select(flight, year, month, day, dep_time, dep_delay, arr_time, arr_delay, carrier, origin, dest, air_time, distance) %>%
dplyr::rename("airtime" = "air_time", "destination" = "dest")
flightsSelected
flightsMutated <- flightsSelected %>%
mutate(gain = dep_delay - arr_delay,
hours = airtime / 60,
gain_per_hour = gain/hours)
flightsMutated
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
#install.packages(tidyverse)
#install.packages(nycflights13)
library(tidyverse) # This will include the "dplyr" package
library(nycflights13)
flights <- flights
airlines <- airlines
flights %>%
dplyr::filter(month == 1 | month == 2, day == 1)
flightsFiltered <- flights %>%
dplyr::filter(month %in% c(11, 12)) %>%
dplyr::filter(dep_time >= 700) %>%
dplyr::filter(carrier != "UA")
flightsFiltered
flightsArranged <- flightsFiltered %>%
arrange(year, month, day, desc(dep_delay))
flightsArranged
flightsSelected <- flightsArranged %>%
dplyr::select(-(hour:time_hour)) %>%
dplyr::select(flight, year, month, day, dep_time, dep_delay, arr_time, arr_delay, carrier, origin, dest, air_time, distance) %>%
dplyr::rename("airtime" = "air_time", "destination" = "dest")
flightsSelected
flightsMutated <- flightsSelected %>%
mutate(gain = dep_delay - arr_delay,
hours = airtime / 60,
gain_per_hour = gain/hours)
flightsMutated
flightsMutated <- flightsSelected %>%
mutate(gain = dep_delay - arr_delay,
hours = airtime / 60,
gain_per_hour = gain/hours)
flightsMutated
?mutate_at
?across
?filter
flights2a <- flightsMutated %>%
mutate_at(.vars = c("year", "month", "day"), .funs = as.character)
flights2b <- flightsMutated %>%
mutate(across(.cols = c("year", "month", "day"), .fns = as.character))
flights3a <- flightsMutated %>%
mutate_all(.funs = as.character)
flights3b <- flightsMutated %>%
mutate(across(.cols = everything(), .fns = as.character))
# Check that these return the same result
identical(flights2a, flights2b)
identical(flights3a, flights3b)
meanDelays <- flightsMutated %>%
group_by(carrier) %>%
dplyr::summarize(meanDelay = mean(dep_delay, na.rm = TRUE)) %>%
arrange(desc(meanDelay))
meanDelays
meanDelays <- flightsMutated %>%
group_by(carrier) %>%
dplyr::summarize(meanDelay = mean(dep_delay, na.rm = TRUE)) %>%
arrange(desc(meanDelay))
meanDelays
carrierCounts <- flightsMutated %>%
group_by(carrier) %>%
dplyr::summarize(n = n()) %>%   # Equivalent: tally()
arrange(desc(n))
carrierCounts
airlineNames <- meanDelays %>%
left_join(airlines, by = c("carrier" = "carrier")) %>%
dplyr::select(name, carrier, meanDelay)
airlineNames
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
library(nycflights13)
dataset <- flights %>%
mutate(yearFactor = factor(year),
bigfour = ifelse(carrier %in% c("UA", "AA", "DL", "WN"), T, F),
air_time = air_time - 0.5)
summary(dataset$tailnum)
dataset$tailnum[1:20]
summary(dataset$air_time)
dataset$air_time[1:20]
summary(dataset$arr_time)
dataset$arr_time[1:20]
summary(dataset$bigfour)
dataset$bigfour[1:20]
summary(dataset$yearFactor)
dataset$yearFactor[1:20]
summary(dataset$monthFactor)
dataset$monthFactor[1:20]
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
library(nycflights13)
dataset <- flights %>%
mutate(monthFactor = factor(month),
bigfour = ifelse(carrier %in% c("UA", "AA", "DL", "WN"), T, F),
air_time = air_time - 0.5)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
library(nycflights13)
dataset <- flights %>%
mutate(monthFactor = factor(month),
bigfour = ifelse(carrier %in% c("UA", "AA", "DL", "WN"), T, F),
air_time = air_time - 0.5)
summary(dataset$tailnum)
dataset$tailnum[1:20]
summary(dataset$air_time)
dataset$air_time[1:20]
summary(dataset$arr_time)
dataset$arr_time[1:20]
summary(dataset$bigfour)
dataset$bigfour[1:20]
summary(dataset$monthFactor)
dataset$monthFactor[1:20]
summary(dataset$monthFactor)
summary(dataset$month)
typeof(dataset$monthFactor)
summary(dataset$monthFactor)
typeof(dataset$month)
summary(dataset$month)
class(dataset$monthFactor)
summary(dataset$monthFactor)
class(dataset$month)
summary(dataset$month)
?as.POSIXct
str(dataset)
class(dataset$time_hour)
str(dataset$time_hour)
str(dataset$monthFactor)
summary(dataset$monthFactor)
str(dataset$month)
summary(dataset$month)
str(dataset$month)
summary(dataset$month)
str(dataset$monthFactor)
summary(dataset$monthFactor)
str(dataset$month)
summary(dataset$month)
str(dataset$bigfour)
summary(dataset$bigfour)
dataset$bigfour[1:20]
str(dataset$arr_time)
str(dataset$air_time)
summary(dataset$air_time)
dataset$air_time[1:20]
str(dataset$arr_time)
summary(dataset$arr_time)
dataset$arr_time[1:20]
str(dataset$air_time)
summary(dataset$air_time)
dataset$air_time[1:20]
str(dataset$bigfour)
summary(dataset$bigfour)
dataset$bigfour[1:20]
summary(dataset$bigfour)
dataset$bigfour[1:20]
unclass(dataset$time_hour)
as.POSIXlt(dataset$time_hour)
str(dataset$time_hour)
as.POSIXct(dataset$time_hour, format = "%Y-%m-%d %H:%M:%S")
as.POSIXct(dataset$time_hour, format = "%Y-%m-%d %H:%M:%S")[1:5]
as.POSIXct(dataset$time_hour, format = "%Y-%m-%d %H:%M:%S")[1:4]
as.POSIXct(dataset$time_hour, format = "%Y-%m-%d %H:%M:%S")[1:4]
as.POSIXct(dataset$time_hour, format = "%Y-%m-%d %H:%M")
as.POSIXct(dataset$time_hour, format = "%Y-%m-%d %H:%M:%S")[1:4]
as.POSIXct(dataset$time_hour, format = "%Y-%m-%d %H:%M")[1:4]
as.POSIXct(dataset$time_hour, format = "%Y-%m-%d %H:%M:%S")[1:4]
as.POSIXct(dataset$time_hour, format = "%Y-%m-%d")[1:4]
as.POSIXct(dataset$time_hour, format = "%Y-%m-%d %H:%M:%S")[1:4]
as.POSIXlt(dataset$time_hour, format = "%Y-%m-%d")[1:4]
as.POSIXct(dataset$time_hour, tz = "EST")[1:4]
as.POSIXlt(dataset$time_hour, tz = "GMT")[1:4]
class(dataset)
str(dataset)
class(dataset)
list1 <- c(3, TRUE, as.factor(1))
class(list1)
list1
list1 <- list(3, TRUE, as.factor(1))
list1
as.numeric("test")
as.logical(3)
as.character("4")
as.numeric("character string")
as.character(4)
as.numeric("character string")
is.character(4)
is.character("4")
as.character(4)
as.numeric("character string")
matrixChar <- matrix("Char1", "Char2", "Char3", "Char4", nrow = 2, ncol = 2)
matrixChar <- matrix(c("Char1", "Char2", "Char3", "Char4"), nrow = 2, ncol = 2)
matrixChar <- matrix(c("Char1", "Char2", "Char3", "Char4"), nrow = 2, ncol = 2)
matrixNumbers <- matrix(1:6, nrow = 2, ncol = 3)
matrixChar <- matrix(c("Char1", "Char2", "Char3", "Char4"), nrow = 2, ncol = 2)
matrixNumbers <- matrix(1:6, nrow = 2, ncol = 3)
matrixChar
matrixNumbers
dfExample <- data.frame(dataset)
dfExample <- data.frame(dataset)
dfExample[1:20,]
dataset[1:20,]
list3
list1 <- list(3, TRUE, as.factor(1))
list2 <- list(flights, dataset)
list3 <- list(1, 4, flights)
list4 <- list(list1, list2, list3)
list3
?c
?ifelse
vectorChar <- c("Char1", "Char2", "Char3")
vectorNum <- c(1, 2, 3)
vectorChar
vectorNum
?array
